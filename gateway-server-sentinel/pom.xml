<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>product-order-gateway-sentinel</artifactId>
        <groupId>com.example</groupId>
        <version>v1.0.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example</groupId>
    <artifactId>gateway-server-sentinel</artifactId>
    <version>v1.0.0</version>
    <url>http://www.fwtai.com</url>

    <description>
        gateway路由网关,已整合 gateway-server-sentinel,它不依赖redis
        (99%)2个9是基本可用;(99.9%)3个9是叫高可用;(99.99%)4个9是叫拥有自动恢复的高可用;
        主要手段:数据的冗余备份和服务的失效转移

        Spring Cloud Gateway是Spring Cloud体系的第二代网关组件；
        基于Spring 5.0的新特性WebFlux进行开发，底层网络通信框架使用的是Netty，所以其吞吐量高、性能强劲，
        Spring Cloud Gateway可以通过服务发现组件自动转发请求，默认集成了Ribbon做负载均衡，以及默认使用Hystrix对网关进行保护，
        当然也可以选择其他的容错组件，例如Sentinel
        功能强大：内置了很多实用的功能，例如转发、监控、限流等
        设计优雅，容易扩展

    </description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <dependencies>
        <!-- gateway路由网关[spring cloud gateway]依赖 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-gateway</artifactId>
        </dependency>
        <!-- 用于gateway路由配置规则的uri调用应用名,即 uri: lb://product-service ,添加此依赖默认就开启 @EnableEurekaClient 把gateway路由网关注册到服务注册中心的依赖-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <!-- 若项目仅仅是单独使用Sentinel的依赖,不配合Sentinel独立的服务端 -->
        <dependency>
            <groupId>com.alibaba.csp</groupId>
            <artifactId>sentinel-spring-cloud-gateway-adapter</artifactId>
        </dependency>
        <!-- 若要整合alibaba-sentinel-开始 -->
        <!--<dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-alibaba-sentinel-gateway</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
        </dependency>-->
        <!-- 若要整合alibaba-sentinel-结束 -->
    </dependencies>
    <!--打包配置,独立部署的都需要添加-->
    <build>
        <finalName>${project.artifactId}.${project.version}</finalName><!--打包成jar包,finalName生成的文件名-->
    </build>
</project>
