<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>product-order-gateway-sentinel</artifactId>
        <groupId>com.example</groupId>
        <version>v1.0.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>order-service</artifactId>

    <description>
        订单服务,它会内部调用商品服务;供web前端提供接口服务,是想通过 接口+注解来调用服务
    </description>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--只要添加了依赖,默认就开启了 @EnableEurekaClient -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <!--hystrix 断路器 | 熔断器 | 保险丝,可以即及时返回服务调用失败的结果,让线程不因为等待服务而阻塞;用户的请求不是直接访问服务,而是使用线程池中空闲的线程访问服务,加速失败判断时间-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
        </dependency>
        <!--专为feign添加的依赖,是想通过 接口+注解来调用服务 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>
    </dependencies>
    <!--打包配置,独立部署的都需要添加-->
    <build>
        <finalName>${project.artifactId}.${project.version}</finalName><!--打包成jar包,finalName生成的文件名-->
    </build>
</project>